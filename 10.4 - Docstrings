### Docstrings are basically a way for us to create little bits of documentation as we're coding along in our functions or in our other blocks of code.
### Previously, we've seen that when we use other functions like the ones that were ready to find by Python, like the length function, you can see that as soon as I open up my parentheses, I can see this little piece of documentation that tells me what this function is actually going to do, namely return the number of items in a container.

### To create the same kind of documentation (docstrings) for the functions that we write:
###!!!!! The docstring has to go as the first line after the declaration. So here we've defined the name of our function, the inputs, and then after the colon, the first indented line will be the docstring.
###!!!!! But that's not it. You also have to use three of these quotation marks and it's in between these three quotation marks """  """ that you can write your documentation.
#### What would we want our future selves or another user who's using this function to know about it? 
#### But when we use a docstring, we can write as many lines as we want and it will be interpreted all as the same thing altogether, as if it was fitted onto the same line.



def format_name(f_name, l_name):
    """Take a first and last name and format it 
  to return the title case version of the name."""
    if f_name == "" or l_name == "":
        return "You didn't provide valid inputs."
    formated_f_name = f_name.title()
    formated_l_name = l_name.title()
    return f"Result: {formated_f_name} {formated_l_name}"
    
    
#### After adding our docstring, it's time to see what it looks like. 
#### Now, if I call this function format_name, and I open up the parentheses, you can see that the text we wrote here now gets populated in the documentation.
format_name()

